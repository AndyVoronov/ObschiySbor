/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ —Å–æ–±—ã—Ç–∏–π
 */

// –¢–∏–ø—ã —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–æ–±—ã—Ç–∏–π
export const EVENT_STATUS = {
  UPCOMING: 'upcoming',    // –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ (–µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–æ—Å—å)
  ONGOING: 'ongoing',      // –í –ø—Ä–æ—Ü–µ—Å—Å–µ (–∏–¥—ë—Ç —Å–µ–π—á–∞—Å)
  COMPLETED: 'completed',  // –ó–∞–≤–µ—Ä—à–µ–Ω–æ (—É–∂–µ –ø—Ä–æ—à–ª–æ)
  CANCELLED: 'cancelled',  // –û—Ç–º–µ–Ω–µ–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º
};

// –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤
export const EVENT_STATUS_LABELS = {
  [EVENT_STATUS.UPCOMING]: '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ',
  [EVENT_STATUS.ONGOING]: '–ò–¥—ë—Ç —Å–µ–π—á–∞—Å',
  [EVENT_STATUS.COMPLETED]: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
  [EVENT_STATUS.CANCELLED]: '–û—Ç–º–µ–Ω–µ–Ω–æ',
};

// –¶–≤–µ—Ç–∞ –¥–ª—è –±–µ–π–¥–∂–µ–π —Å—Ç–∞—Ç—É—Å–æ–≤
export const EVENT_STATUS_COLORS = {
  [EVENT_STATUS.UPCOMING]: '#3498db',   // –°–∏–Ω–∏–π
  [EVENT_STATUS.ONGOING]: '#2ecc71',    // –ó–µ–ª—ë–Ω—ã–π
  [EVENT_STATUS.COMPLETED]: '#95a5a6',  // –°–µ—Ä—ã–π
  [EVENT_STATUS.CANCELLED]: '#e74c3c',  // –ö—Ä–∞—Å–Ω—ã–π
};

// –≠–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
export const EVENT_STATUS_EMOJI = {
  [EVENT_STATUS.UPCOMING]: 'üìÖ',
  [EVENT_STATUS.ONGOING]: 'üî¥',
  [EVENT_STATUS.COMPLETED]: '‚úÖ',
  [EVENT_STATUS.CANCELLED]: '‚ùå',
};

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–æ–±—ã—Ç–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç (–¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã)
 * @param {Object} event - –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è
 * @returns {string} - —Å—Ç–∞—Ç—É—Å —Å–æ–±—ã—Ç–∏—è
 */
export const getEventStatus = (event) => {
  // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —ç—Ç–æ –æ—Ç–º–µ–Ω–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
  if (event.status === EVENT_STATUS.CANCELLED) {
    return EVENT_STATUS.CANCELLED;
  }

  // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω –≤ –ë–î - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
  if (event.status && event.status !== EVENT_STATUS.UPCOMING) {
    return event.status;
  }

  const now = new Date();
  const eventDate = new Date(event.event_date);
  const eventEndDate = event.end_date ? new Date(event.end_date) : null;

  // –°–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å
  if (eventEndDate && eventEndDate < now) {
    return EVENT_STATUS.COMPLETED;
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç end_date, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –¥–ª–∏—Ç—Å—è 1 –¥–µ–Ω—å
  if (!eventEndDate && eventDate < new Date(now - 24 * 60 * 60 * 1000)) {
    return EVENT_STATUS.COMPLETED;
  }

  // –°–æ–±—ã—Ç–∏–µ –∏–¥—ë—Ç —Å–µ–π—á–∞—Å
  if (eventDate <= now && (!eventEndDate || eventEndDate >= now)) {
    return EVENT_STATUS.ONGOING;
  }

  // –°–æ–±—ã—Ç–∏–µ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–æ—Å—å
  return EVENT_STATUS.UPCOMING;
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–±—ã—Ç–∏—é
 * @param {Object} event - –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è
 * @returns {boolean}
 */
export const canJoinEvent = (event) => {
  const status = getEventStatus(event);
  return status === EVENT_STATUS.UPCOMING || status === EVENT_STATUS.ONGOING;
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
 * @param {Object} event - –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è
 * @returns {boolean}
 */
export const canCancelEvent = (event) => {
  const status = getEventStatus(event);
  return status === EVENT_STATUS.UPCOMING || status === EVENT_STATUS.ONGOING;
};

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—É—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} status - —Å—Ç–∞—Ç—É—Å —Å–æ–±—ã—Ç–∏—è
 * @param {boolean} withEmoji - –¥–æ–±–∞–≤–∏—Ç—å —ç–º–æ–¥–∑–∏
 * @returns {string}
 */
export const formatStatus = (status, withEmoji = false) => {
  const label = EVENT_STATUS_LABELS[status] || status;
  if (withEmoji) {
    const emoji = EVENT_STATUS_EMOJI[status] || '';
    return `${emoji} ${label}`;
  }
  return label;
};

/**
 * –§–∏–ª—å—Ç—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É
 * @param {Array} events - –º–∞—Å—Å–∏–≤ —Å–æ–±—ã—Ç–∏–π
 * @param {string} status - —Å—Ç–∞—Ç—É—Å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
 * @returns {Array}
 */
export const filterEventsByStatus = (events, status) => {
  if (!status) return events;
  return events.filter(event => getEventStatus(event) === status);
};
