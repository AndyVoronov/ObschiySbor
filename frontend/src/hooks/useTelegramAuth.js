import { useEffect, useState } from 'react';
import { supabase } from '../lib/supabase';

/**
 * –•—É–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram Mini App
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Telegram WebApp API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const useTelegramAuth = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  const [isTelegramApp, setIsTelegramApp] = useState(false);

  useEffect(() => {
    const initTelegramAuth = async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
        const tg = window.Telegram?.WebApp;

        if (!tg) {
          console.log('–ù–µ Telegram Mini App, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
          setIsLoading(false);
          return;
        }

        setIsTelegramApp(true);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp
        tg.ready();

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ initDataUnsafe
        const user = tg.initDataUnsafe?.user;

        if (!user) {
          console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
          setIsLoading(false);
          return;
        }

        console.log('Telegram Mini App: –æ–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', user);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ Supabase
        const { data: { session } } = await supabase.auth.getSession();

        if (session) {
          console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Supabase');
          setIsLoading(false);
          return;
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await authenticateTelegramUser(user, tg);

      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err);
        setError(err.message);
      } finally {
        setIsLoading(false);
      }
    };

    initTelegramAuth();
  }, []);

  return { isLoading, error, isTelegramApp };
};

/**
 * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Telegram Mini App
 */
const authenticateTelegramUser = async (telegramUser, tg) => {
  try {
    const telegramId = telegramUser.id;
    const firstName = telegramUser.first_name;
    const lastName = telegramUser.last_name || '';
    const username = telegramUser.username || '';
    const languageCode = telegramUser.language_code || 'ru';

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ WebApp)
    const photoUrl = telegramUser.photo_url || null;

    console.log('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', telegramId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —ç—Ç–∏–º Telegram ID
    const { data: existingProfile, error: profileError } = await supabase
      .from('profiles')
      .select('id, telegram_password')
      .eq('telegram_id', telegramId)
      .maybeSingle();

    if (profileError && profileError.code !== 'PGRST116') {
      throw profileError;
    }

    if (existingProfile) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥
      console.log('–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥');

      if (!existingProfile.telegram_password) {
        throw new Error('–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
      }

      // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥ —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
      const email = `tg${telegramId}@obschiysbor.local`;
      const { error: signInError } = await supabase.auth.signInWithPassword({
        email: email,
        password: existingProfile.telegram_password,
      });

      if (signInError) {
        throw signInError;
      }

      console.log('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram Mini App');

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
      tg.showPopup({
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
        message: `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã`,
        buttons: [{ type: 'ok' }]
      });

      return;
    }

    // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ–∑–¥–∞—ë–º –∞–∫–∫–∞—É–Ω—Ç
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    const email = `tg${telegramId}@obschiysbor.local`;
    const password = Math.random().toString(36).slice(-16) + Math.random().toString(36).slice(-16);
    const fullName = `${firstName} ${lastName}`.trim() || `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram ${telegramId}`;

    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email: email,
      password: password,
      options: {
        data: {
          full_name: fullName,
          telegram_id: telegramId,
          telegram_username: username,
          avatar_url: photoUrl,
        }
      }
    });

    if (signUpError) {
      throw signUpError;
    }

    if (!signUpData.user) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å Telegram ID, –ø–∞—Ä–æ–ª–µ–º –∏ –¥–∞–Ω–Ω—ã–º–∏
    const updateData = {
      telegram_id: telegramId,
      telegram_password: password,
      telegram_username: username,
    };

    if (photoUrl) {
      updateData.avatar_url = photoUrl;
    }

    const { error: updateError } = await supabase
      .from('profiles')
      .update(updateData)
      .eq('id', signUpData.user.id);

    if (updateError) {
      throw updateError;
    }

    console.log('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ Telegram Mini App');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    tg.showPopup({
      title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
      message: `${firstName}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! üéâ`,
      buttons: [{ type: 'ok' }]
    });

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram Mini App:', err);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.showAlert(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${err.message}`);
    }

    throw err;
  }
};
