import { useState } from 'react';
import AppealBlockModal from './AppealBlockModal';
import './BlockedUserNotice.css';

const BlockedUserNotice = ({ blockInfo, onAppealSubmitted }) => {
  const [showAppealModal, setShowAppealModal] = useState(false);

  if (!blockInfo || !blockInfo.is_blocked) {
    return null;
  }

  const isPermanent = !blockInfo.blocked_until;
  const blockedUntilDate = blockInfo.blocked_until
    ? new Date(blockInfo.blocked_until).toLocaleString('ru-RU', {
        day: 'numeric',
        month: 'long',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      })
    : null;

  const blockedAtDate = blockInfo.blocked_at
    ? new Date(blockInfo.blocked_at).toLocaleString('ru-RU', {
        day: 'numeric',
        month: 'long',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      })
    : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

  return (
    <>
      <div className="blocked-user-notice">
        <div className="blocked-notice-icon">üö´</div>
        <div className="blocked-notice-content">
          <h2 className="blocked-notice-title">
            {isPermanent ? '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞' : '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}
          </h2>

          <div className="blocked-notice-details">
            <div className="blocked-detail-item">
              <span className="detail-label">–î–∞—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:</span>
              <span className="detail-value">{blockedAtDate}</span>
            </div>

            {!isPermanent && (
              <div className="blocked-detail-item">
                <span className="detail-label">–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ:</span>
                <span className="detail-value">{blockedUntilDate}</span>
              </div>
            )}

            <div className="blocked-detail-item">
              <span className="detail-label">–ü—Ä–∏—á–∏–Ω–∞:</span>
              <span className="detail-value reason">{blockInfo.block_reason}</span>
            </div>
          </div>

          <div className="blocked-notice-message">
            <p>
              –í–æ –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—ã <strong>–Ω–µ –º–æ–∂–µ—Ç–µ</strong>:
            </p>
            <ul>
              <li>–°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è</li>
              <li>–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–æ–±—ã—Ç–∏—è—Ö</li>
            </ul>
            <p className="blocked-notice-help">
              –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–π, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ.
            </p>
          </div>

          <button
            className="btn-appeal-block"
            onClick={() => setShowAppealModal(true)}
          >
            üìù –û–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
          </button>
        </div>
      </div>

      {showAppealModal && (
        <AppealBlockModal
          isOpen={showAppealModal}
          onClose={() => setShowAppealModal(false)}
          blockInfo={blockInfo}
          onSuccess={() => {
            setShowAppealModal(false);
            if (onAppealSubmitted) {
              onAppealSubmitted();
            }
          }}
        />
      )}
    </>
  );
};

export default BlockedUserNotice;
