import { createClient } from '@supabase/supabase-js';
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const supabaseUrl = 'https://wrfcpsljchyetbmupqgc.supabase.co';
const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndyZmNwc2xqY2h5ZXRibXVwcWdjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkyOTY4MDQsImV4cCI6MjA3NDg3MjgwNH0.df9yt9tIP58S8JTPgvpreKqpVGkb01NtC1e7kYgg0rc';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function setupDatabase() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    const sqlPath = join(__dirname, 'database', 'schema.sql');
    const sql = readFileSync(sqlPath, 'utf8');

    console.log('üìÑ SQL —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
    console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:');
    console.log('   1. –û—Ç–∫—Ä—ã—Ç—å Supabase Dashboard');
    console.log('   2. –ü–µ—Ä–µ–π—Ç–∏ –≤ SQL Editor');
    console.log('   3. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ database/schema.sql');
    console.log('   4. –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∫—Ä–∏–ø—Ç');
    console.log('\nüìã –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π SQL:\n');
    console.log(sql);

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ - —Å–æ–∑–¥–∞–¥–∏–º —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ REST API
    console.log('\n\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ API...');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const { data, error } = await supabase
      .from('profiles')
      .select('count')
      .limit(1);

    if (error && error.code === '42P01') {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ profiles –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ');
      console.log('üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard');
    } else if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    } else {
      console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

setupDatabase();
